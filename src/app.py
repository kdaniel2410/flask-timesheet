import os
from flask import Flask, render_template, flash, request
from models import *
from peewee import *

database = SqliteDatabase("db.sqlite")
app = Flask(__name__)
app.secret_key = os.environ.get('SECRET_KEY')


# This hook ensures that a connection is opened to handle any queries
# generated by the request.
@app.before_request
def _db_connect():
    database.connect()


# This hook ensures that the connection is closed when we've finished
# processing the request.
@app.teardown_request
def _db_close(exc):
    if not database.is_closed():
        database.close()


@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        flash("Shift created successfully.")
        Shift.create(**{k: v for k, v in request.form.items() if v})

    shifts = Shift.select().order_by(Shift.date.desc())
    return render_template("index.html", shifts=shifts)


if __name__ == "__main__":
    with database:
        database.create_tables([User, Shift])

    app.run(debug=True, host="0.0.0.0", port=8000)
